---
import Navbar from '@/components/navbar'
import '../styles/globals.css'
---
<!DOCTYPE html>
<script is:inline>
	const getThemePreference = () => {
		// Function to get the value of a cookie by name
		const getCookie = (name) => {
			const value = `; ${document.cookie}`;
			const parts = value.split(`; ${name}=`);
			if (parts.length === 2) return parts.pop().split(';').shift();
		};
		
		// Check if the theme cookie exists, otherwise use system preference
		const theme = getCookie('theme');
		if (theme) {
			return theme;
		}

		// Default to system preference if no cookie is found
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};

	const setThemeCookie = (theme) => {
		// Set the theme cookie with a 20-year expiration
		const date = new Date();
		date.setFullYear(date.getFullYear() + 20); // 20 years
		document.cookie = `theme=${theme}; domain=.bcuw.xyz; path=/; expires=${date.toUTCString()};`;
	};

	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	// Observer to watch for changes to the 'dark' class and update the cookie
	const observer = new MutationObserver(() => {
		const isDark = document.documentElement.classList.contains('dark');
		setThemeCookie(isDark ? 'dark' : 'light');
	});
	observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
</script>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/png" href="/bcuwOnlyTitleSquare.png" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>BCUW</title>
	</head>
	<body class="h-screen w-screen bg-secondary">
    <Navbar client:only='react' />
    <div class="h-[calc(100vh-4rem)]">
      <div class="h-[calc(100%-0.5rem)] w-[calc(100vw-1rem)]">
        <main class="mx-2 mb-2 h-full w-full overflow-y-scroll rounded-lg bg-background p-2">
          <slot />
        </main>
      </div>
    </div>
	</body>
</html>